ls
ls()
cd..
ls
cd R
cd /R
cd /
lis
ls
getwd
getwd()
getwd()
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
install.packages("Data.table")
install.packages("lattice")
install.packages("lattice")
install.packages("data.table")
install.packages("xlsx")
?sample()
source("http://bioconductor.org/biocLite.R")
install.packages("rhdf5")
install.packages("rhdf5")
install.packages("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created <- h5createFile("example.h5")
created
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;")
result <- dbGetQuery(ucscDb, "show databases;"); result
result
dbDisconnect(ucscDb)
ucscDb <- dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
allTables <- dbListTables(hg19)
ucscDb <- dbConnect(MySQL(),
user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;");
result
dbDisconnect(ucscDb)
hg19 <- dbConnect(MySQL(),
user="genome",
db="hg19"
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),
user="genome",
db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
allTables
length(allTables)
allTables[1:10]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
count(*)
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
dbDisconnect(hg19)
hg19 <- dbConnect(MySQL(),
user="genome",
db="hg19",
host="genome-mysql.cse.ucsc.edu")
dbDisconnect(hg19)
data()
head(Car93)
data(Cars93, package="MASS")
head(Car93)
head(Cars93)
summary(Cars93)
library(XML)
url = "https://en.wikipedia.org/wiki/World_population"
tbls = readHTMLTable(ur)
tbls = readHTMLTable(url)
url = "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html = htmlTreeParse(url, useInternalNodes = TRUE)
library(XML)
url = "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html = htmlTreeParse(url, useInternalNodes = TRUE)
library(XML)
con = url("https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
html
install.packages("httr")
library(httr)
url = "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html2 = GET(url)
install.packages("curl")
install.packages("curl")
install.packages("httr")
install.packages("httr")
url = "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html2 = GET(url)
library(httr)
library(httr)
url = "https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html2 = GET(url)
url = "http://httpbin.org/basic-auth/user/passwd"
pg1 = GET(url)
pg1
pg2 = GET(url, authenticate("user", "password"))
pg2
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("plyr")
restData <- read.csv("./Data/Restaurants.csv")
setwd("/Users/ethansun/R")
restData <- read.csv("./Data/Restaurants.csv")
View(restData)
View(restData)
summary(restData)
str(restData)
hist(restData$councilDistrict)
quantile(restData$councilDistrict, na.rm = T)
quantile(restData$councilDistrict)
quantile(restData$councilDistrict, na.rm = T)
quantile(restData$councilDistrict, probs = c(0.5, 0.75, 0.9))
is.na(restData)
table(restData$zipCode)
table(restData$zipCode, useNA = "ifany")
table(restData$councilDistrict, restData$zipCode)
is.na(restData$councilDistrict)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode > 0)
colSums(restData)
colSums(is.na(restData))
all(colSums(is.na(restData))==0)
install.packages("plyr")
library(plyr)
arrange(x, var1) #sort by var1
rm(list=ls())
x <- data.frame("var1" = sample(1:5), "var2" = sample(6:10), "var3" = sample(11:15)); x
x$var2[c(1,3)] <- NA ; x
arrange(x, var1) #sort by var1
arrange(x, desc(var1))
